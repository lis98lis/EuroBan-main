@use "sass:math";
@import "layout";
//Colors



$title-color: #020C31;
$text-color: #3B3B3B;


//Mixins


@mixin hover-link {
  &.active + .next-block {
    display: flex;
  }
}


//Adaptive property (vw)

$maxWidth: 1920;
$maxWidthContainer: 1170;

@mixin adaptive-value($property,$startSize,$minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
    }
  } @else if $type==2 {
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
    }
  } @else {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
  }
}

@mixin adaptive-font($desktopFS,$mobileFS) {
  $differ: $desktopFS - $mobileFS;
  font-size: calc(24px + #{$differ} * (100vw / #{$maxWidth}));

  @media (max-width: 767px) {
    font-size: calc(24px + (#{$differ} + #{$differ} * 0.7) * (100vw / #{$maxWidth}));
  }
}



$base: 16;
$block_base: 1280;

@function toEm($value) {
  @return math.div($value, $base) + em;
}

@function toRem($value) {
  @return math.div($value,$base) + rem;
}

@function toPercent($value) {
  @return math.div($value,$block_base) * 100%;
}

$block_width: 1200px


